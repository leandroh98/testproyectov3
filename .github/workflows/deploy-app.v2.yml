# This is a basic workflow to help you get started with Actions

name: Deploy Demo App (V2)

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

env:
  SOLUTION_PATH: GithubActionsTesting.sln
  BUILD_PATH: GithubActionsTesting/bin/Release/GithubActionsTesting.exe
  OUT_NAME: GithubActionsTesting.exe
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Get the tag name
      run: |
        echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
        echo ${{ github.ref }}
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_PATH }}
    
    - name: Build the Solution
      run: msbuild ${{ env.SOLUTION_PATH }} /p:Configuration=Release

    - name: Create Release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: Release ${{ env.TAG }}

    - name: Upload Asset to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_PATH }}
        asset_name: ${{ env.OUT_NAME }}
        asset_content_type: application/exe
